20190324 Niedziela 

http://hdpoc1.bigdatapassion.com:8080/#/login
l: student
h: student123

apached bigtop - 


ssh karolzdunczyk@hdpoc1.bigdatapassion.com
h:karolzdunczyk


Polecenia
hdfs dfs -ls /
hdfs dfs -mkdir pw
hdfs dfs -cp /dane/lektury/lektury-100/antek.txt pw

hdfs dfs -get pw/antek.txt .
hdfs dfs -put antek.txt pw/antek2.txt


hdfs dfs -setrep 3 pw/antek.txt
hdfs dfs -setrep 3 /user/karolzdunczyk

tree

hdfs dfs -setrep -w 3 pw/antek.txt
hdfs dfs -setrep -w 3 pw


Erasure coding
hdfs ec -listPolicies
hdfs ec -setPolicy -path pw -policy RS-3-2-1024k

dane dzielone na 1024 bierzemy 3 kawałki i generujemy 2 sumy konstrolne minimum 5 maszyn.


hdfs dfs -rm -skipTrash pw/antek.txt

hdfs dfs -du -h /user/karolzdunczyk
hdfs dfs -du -h -s /user/karolzdunczyk

hdfs dfs -mkdir snap



hdfs dfsadmin -allowsnapshot /user/karolzdunczyk/snap
hdfs dfs -createSnapshot snap


hdfs dfs -rm -skipTrash snap/lektury-100/antek.txt
hdfs dfs -cp snap/lektury-100/balladyna.txt snap/lektury-100/balladyna2.txt
hdfs dfs -ls snap/lektury-100


hdfs dfs -ls snap/lektury-100 | grep antek.tx

wyszukiwanie w snapshot
hdfs dfs -ls snap/.snapshot/s20190324-132218.018/lektury-100 | grep antek.t


[karolzdunczyk@hdpoc1 ~]$ hdfs snapshotDiff snap s20190324-132218.018 .
Difference between snapshot s20190324-132218.018 and current directory under directory /user/karolzdunczyk/snap:
M	./lektury-100
+	./lektury-100/balladyna2.txt
-	./lektury-100/antek.txt


lista snapshot-ów
hdfs dfs -ls /user/karolzdunczyk/snap/.snapshot




HIVE

beeline
karolzdunczyk
karolzdunczyk

use movielens;
show tables;

select * from movies limit 10;
describe movies


create database karolzdunczyk;
use karolzdunczyk;

create EXTERNAL table politechnika (a INT);
show tables;
drop table politechnika;


CREATE EXTERNAL TABLE IF NOT EXISTS movies (MovieID INT,Title STRING,Genres STRING)ROW FORMAT DELIMITED FIELDS TERMINATED BY '@';


hdfs dfs -cp /dane/movielens /user/karolzdunczyk/




dfs -cp -f /dane  /user/karolzdunczyk/;
LOAD DATA INPATH '/user/karolzdunczyk/movielens/hive/movies/movies.dat' OVERWRITE INTO TABLE movies;



2019-04-07 Niedziela 
Zajęcia z Radek Szmit 


showdatabases;
create database karolzdunczyk;
use karolzdunczyk;
describe database karolzdunczy;

https://podyplomowe.okno.pw.edu.pl/pluginfile.php/3000/mod_resource/content/2/3.2%20Apache%20Hive.pdf
https://grouplens.org/datasets/movielens/latest/




CREATE EXTERNAL TABLE IF NOT EXISTS movies (MovieID INT,Title STRING,Genres STRING)ROW FORMAT DELIMITED FIELDS TERMINATED BY '@';


show tables;
INFO  : OK
+-----------+
| tab_name  |
+-----------+
| movies    |
+-----------+


select * from movies limit 10;
describe movies;
describe extended movies;
describe formatted movies;






hdfs dfs -cp -f /dane/movielens  /user/karolzdunczyk/
hdfs dfs -ls /user/karolzdunczyk/

beeline
use karolzdunczyk;
LOAD DATA INPATH '/user/karolzdunczyk/movielens/hive/movies/movies.dat' OVERWRITE INTO TABLE movies;

select * from movies limit 10;




selec count(*) from movies;

tags.csv
userId,movieId,tag,timestamp

CREATE EXTERNAL TABLE IF NOT EXISTS tags (userId INT,movieId INT,tag STRING,ts INT)ROW FORMAT DELIMITED FIELDS TERMINATED BY '@';


ratings.csv
userId,movieId,rating,timestamp

CREATE EXTERNAL TABLE IF NOT EXISTS ratings (userId INT,movieId INT,rating DOUBLE,ts INT)ROW FORMAT DELIMITED FIELDS TERMINATED BY '@';



LOAD DATA INPATH '/user/karolzdunczyk/movielens/hive/tags/tags.dat' OVERWRITE INTO TABLE tags;
LOAD DATA INPATH '/user/karolzdunczyk/movielens/hive/ratings/ratings.dat' OVERWRITE INTO TABLE ratings;

select * from tags limit 10;
select * from ratings limit 10;



CREATE EXTERNAL TABLE IF NOT EXISTS movies (MovieID INT,Title STRING,Genres STRING)ROW FORMAT DELIMITED FIELDS TERMINATED BY '@';




CREATE TABLE IF NOT EXISTS imovies (MovieID INT,Title STRING,Genres STRING)ROW FORMAT DELIMITED FIELDS TERMINATED BY '@';







select * from movies limit 10;
select movieid, title from movies limit 10;
select m.movieid, m.title from movies m limit 10;
select upper(title) from movies limit 10;
select count(*) from movies limit 10;
select avg(rating) from ratings limit 10;
select count(DISTINCT userid), count(DISTINCT movieid) from ratings limit 10;






SELECT userid, movieid, CASE  WHEN rating < 1 THEN 'bad'  WHEN rating >= 1 AND rating < 3 THEN 'ok'  WHEN rating >= 3 AND rating < 5 THEN 'good'  ELSE 'very good'END AS human_ratingFROM ratings limit 30;


http://hdpoc4.bigdatapassion.com:9995/#/notebook/2E76XHW2E


select m.title as tytul, avg(r.rating) as rate, count(1) votes from movies as m
join ratings as r on r.movieId = m.movieId
group by m.title
having  votes > 100
order by rate desc limit 10;




 describe function extended substring;



select substring(title, -5, 4) from movies limit 100;


Na podstawie zbiorów movies.dat oblicz w którym roku powstało najwięcej filmów


%jdbc(hive)
use karolzdunczyk;
select substring(title, -5, 4) as rok, count(*) as ilosc from movies
group by substring(title, -5, 4)
order by ilosc desc

%jdbc(hive)
use karolzdunczyk;
select substring(title, -5, 4) as year, count(*) as ile from movies
group by substring(title, -5, 4)
order by ile desc


select * from movies LATERAL VIEW explode(split(genres,"\\|")) latview AS gen limit 10;




Używając danych o filmach znaleźć gatunek, z którego pochodzi najwięcej filmów


select title as tytul, count(*) as ilosc
 from movies LATERAL VIEW explode(split(genres,"\\|")) latview AS gen limit 10;
group by ilosc
order by ilosc desc




%jdbc(hive)
use karolzdunczyk;
select substring(title, -5, 4) as rok, count(*) as ilosc from movies
group by substring(title, -5, 4)
order by ilosc desc



%jdbc(hive)
use karolzdunczyk;
select count(*) ile, gen
from movies LATERAL VIEW explode(split(genres,"\\|")) latview AS gen
group by gen
order by ile desc;


%jdbc(hive)
use karolzdunczyk;
select q.genre as genre, count(1) counted
from (select explode(split(genres,"\\|")) AS genre from movies) q
group by genre
order by counted desc;








SET hive.exec.dynamic.partition.mode=nonstrict;

drop table if exists ratings_part;

CREATE EXTERNAL TABLE IF NOT EXISTS ratings_part (UserID INT,MovieID INT,Rating DOUBLE,Ts INT)PARTITIONED BY (year INT)ROW FORMAT DELIMITED FIELDS TERMINATED BY '@';


INSERT OVERWRITE TABLE ratings_part PARTITION(year)select *, year(from_unixtime(ts)) as yearfrom ratings;


INSERT OVERWRITE TABLE ratings_part PARTITION(year)select *, year(from_unixtime(ts)) as yearfrom ratings;




select year, count(*) as ilefrom ratings_partgroup by year;

select year(from_unixtime(ts)) as year, count(*) as ilefrom ratingsgroup by year(from_unixtime(ts))order by year;







drop table if exists ratings_bucket;

CREATE EXTERNAL TABLE IF NOT EXISTS ratings_bucket (UserID INT,MovieID INT,Rating DOUBLE,Ts INT,year INT)CLUSTERED BY (year) INTO 10 BUCKETSROW FORMAT DELIMITED FIELDS TERMINATED BY '@';

INSERT OVERWRITE TABLE ratings_bucketselect *, year(from_unixtime(ts)) as yearfrom ratings;

select * from ratings_bucket limit 10;









Kafka


https://github.com/sagespl/HADOOP
git clone https://github.com/sagespl/HADOOP.git



ssh karolzdunczyk@hdpoc1
cd /usr/hdp/3.1.0.0-78/kafka



bin/kafka-topics.sh --list --zookeeper localhost:2181


bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic karolzdunczyk




Replicas - nazwa replik
isr - repliki które nadażają za liderem



[karolzdunczyk@hdpoc1 kafka]$ bin/kafka-topics.sh --alter --zookeeper localhost:2181 --topic karolzdunczyk --partitions 3
WARNING: If partitions are increased for a topic that has a key, the partition logic or ordering of the messages will be affected
Adding partitions succeeded!


[karolzdunczyk@hdpoc1 kafka]$ bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic karolzdunczyk
Topic:karolzdunczyk	PartitionCount:3	ReplicationFactor:1	Configs:
	Topic: karolzdunczyk	Partition: 0	Leader: 1005	Replicas: 1005	Isr: 1005
	Topic: karolzdunczyk	Partition: 1	Leader: 1001	Replicas: 1001	Isr: 1001
	Topic: karolzdunczyk	Partition: 2	Leader: 1002	Replicas: 1002	Isr: 1002





[karolzdunczyk@hdpoc1 kafka]$ bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic karolzdunczyk2 --replication-factor 3 --partitions 3
Created topic "karolzdunczyk2".


[karolzdunczyk@hdpoc1 kafka]$ bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic karolzdunczyk
Topic:karolzdunczyk	PartitionCount:3	ReplicationFactor:1	Configs:
	Topic: karolzdunczyk	Partition: 0	Leader: 1005	Replicas: 1005	Isr: 1005
	Topic: karolzdunczyk	Partition: 1	Leader: 1001	Replicas: 1001	Isr: 1001
	Topic: karolzdunczyk	Partition: 2	Leader: 1002	Replicas: 1002	Isr: 1002




[karolzdunczyk@hdpoc1 kafka]$ bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic karolzdunczyk2
Topic:karolzdunczyk2	PartitionCount:3	ReplicationFactor:3	Configs:
	Topic: karolzdunczyk2	Partition: 0	Leader: 1005	Replicas: 1004,1005,1001	Isr: 1005,1001
	Topic: karolzdunczyk2	Partition: 1	Leader: 1005	Replicas: 1005,1001,1002	Isr: 1005,1001,1002
	Topic: karolzdunczyk2	Partition: 2	Leader: 1001	Replicas: 1001,1002,1003	Isr: 1001,1002,1003




















